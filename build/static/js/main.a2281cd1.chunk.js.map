{"version":3,"sources":["assets/cheering.mp3","assets/flip.mp3","assets/goeasy.mp3","assets/dreams.mp3","assets/chillout.mp3","assets/twistter.mp3","assets/freebird.mp3","assets/love.mp3","assets/morningdew.mp3","assets/thelounge.mp3","Cell.js","Board.js","Music.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","props","_useSound","useSound","flip","play","Object","slicedToArray","classes","isLit","react_default","a","createElement","className","onClick","evt","flipCellsAroundMe","Board","_this","this","_props$nrows","nrows","_props$ncols","ncols","_props$chanceLightSta","chanceLightStartsOn","_useState","useState","_useState2","useEffect","createBoard","board","y","row","x","push","Math","random","cheering","volume","_useSound2","stop","_useState3","_useState4","isHovering","setIsHovering","state","hasWon","onMouseEnter","onMouseLeave","tblBoard","_loop","coord","concat","src_Cell","key","flipCellsAround","makeTable","songID","id","title","url","getTime","time","isNaN","floor","slice","Music","currentSong","music","currentTime","duration","_this2","playlist","map","item","class","src","alt","setState","ref","prevProps","prevState","track","goeasy","dreams","chillout","twistter","freebird","love","morningdew","thelounge","pause","_this3","addEventListener","e","target","removeEventListener","React","Component","App","src_Board","src_Music_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2281cd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cheering.25f80649.mp3\";","module.exports = __webpack_public_path__ + \"static/media/flip.e70852f0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/goeasy.87e6bd67.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dreams.ed9fefcd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chillout.26e30108.mp3\";","module.exports = __webpack_public_path__ + \"static/media/twistter.6bf275b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/freebird.0740af77.mp3\";","module.exports = __webpack_public_path__ + \"static/media/love.fa2785d1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/morningdew.d11e76f4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/thelounge.25478905.mp3\";","import React from 'react';\nimport useSound from 'use-sound';\nimport flip from './assets/flip.mp3';\nimport './Cell.css';\n\n\nfunction Cell(props) {\n    // constructor(props) {\n    //   super(props);\n    //   this.handleClick = this.handleClick.bind(this);\n    // };\n    const [play] = useSound(flip);\n\n    const handleClick = (evt) => {\n        // call up to the board to flip cells around this cell\n\n        play();\n        props.flipCellsAroundMe();\n    };\n\n    // render() {\n    let classes = 'Cell' + (props.isLit ? ' Cell-lit' : '');\n\n    return <td className={classes} onClick={handleClick} />;\n    // }\n}\n\nexport default Cell;\n","import React, { useState, useEffect} from 'react';\nimport useSound from 'use-sound';\nimport cheering from './assets/cheering.mp3';\nimport Cell from './Cell';\nimport './Board.css';\n\nfunction Board(props) {\n    // static defaultProps = {\n    //     nrows: 5,\n    //     ncols: 5,\n    //     chanceLightStartsOn: 0.25,\n    // };\n\n    let { nrows = 5, ncols = 5, chanceLightStartsOn = 0.25 } = props;\n    const [hasWon, sethasWon] = useState(false);\n    useEffect(() => { createBoard() }, []);\n    \n    // const [board, setboard] = useState(createBoard());\n\n    //   state = {\n    //         hasWon: false,\n    //         board: this.createBoard(),\n    //     };\n\n\n    const createBoard = () => {\n        let board = [];\n        for (let y = 0; y < nrows; y++) {\n            let row = [];\n            for (let x = 0; x < ncols; x++) {\n                row.push(Math.random() < chanceLightStartsOn);\n            }\n            board.push(row);\n        }\n        return board;\n    };\n\n    const flipCellsAround = (coord) => {\n        let { ncols, nrows } = this.props;\n        let board = this.state.board;\n        let [y, x] = coord.split('-').map(Number);\n\n        function flipCell(y, x) {\n            if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\n                board[y][x] = !board[y][x];\n            }\n        }\n        flipCell(y, x);\n        flipCell(y, x - 1);\n        flipCell(y, x + 1);\n        flipCell(y - 1, x);\n        flipCell(y + 1, x);\n\n        let hasWon = board.every((row) => row.every((cell) => !cell));\n        this.setState({ board: board, hasWon: hasWon });\n    };\n\n\n    const makeTable = () => {\n        let tblBoard = [];\n        for (let y = 0; y < props.nrows; y++) {\n            let row = [];\n            for (let x = 0; x < props.ncols; x++) {\n                let coord = `${y}-${x}`;\n                row.push(\n                    <Cell\n                        key={coord}\n                        isLit={this.state.board[y][x]}\n                        flipCellsAroundMe={() => this.flipCellsAround(coord)}\n                    />\n                );\n            }\n            tblBoard.push(<tr key={y}>{row}</tr>);\n        }\n        return (\n            <table className=\"Board\">\n                <tbody>{tblBoard}</tbody>\n            </table>\n        );\n    };\n\n    const [play, { stop }] = useSound(cheering, { volume: 0.5 });\n\n    const [isHovering, setIsHovering] = useState(false);\n\n    /** Render game board or winning message. */\n\n    return (\n        <div className=\"BoardDisplay\">\n            {this.state.hasWon? (\n                <div\n                    className=\"winner\"\n                    onMouseEnter={() => {\n                        setIsHovering(true);\n                        play();\n                    }}\n                    onMouseLeave={() => {\n                        setIsHovering(false);\n                        stop();\n                    }}\n                    isHovering={isHovering}\n                >\n                    <span className=\" neon-blue\">YOU</span>\n                    <span className=\" neon-orange\">WIN! </span>\n                </div>\n            ) : (\n                <div>\n                    <div className=\"Board-title\">\n                        <div className=\" neon-orange\">Lights </div>\n                        <div className=\" neon-blue\">Out </div>\n                    </div>\n                    {makeTable()}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Board;\n","import React from 'react';\nimport goeasy from './assets/goeasy.mp3';\nimport dreams from './assets/dreams.mp3';\nimport chillout from './assets/chillout.mp3';\nimport twistter from './assets/twistter.mp3';\nimport freebird from './assets/freebird.mp3';\nimport love from './assets/love.mp3';\nimport morningdew from './assets/morningdew.mp3';\nimport thelounge from './assets/thelounge.mp3';\nimport './Music.css';\n\n// const goeasy = 'https://www.mboxdrive.com/bensound-acousticbreeze.mp3';\n// const dreams = 'https://www.mboxdrive.com/bensound-thejazzpiano.mp3';\n\n// const chillout = 'https://www.mboxdrive.com/bensound-theelevatorbossanova.mp3';\n\n// const twistter = 'https://www.mboxdrive.com/bensound-romantic.mp3';\n\n// const freebird = 'https://www.mboxdrive.com/bensound-jazzyfrenchy.mp3';\n\n// const love = 'https://www.mboxdrive.com/bensound-memories.mp3';\n\n// const morningdew = 'https://www.mboxdrive.com/bensound-hipjazz.mp3';\n\n// const thelounge = 'https://www.mboxdrive.com/bensound-thelounge.mp3';\n\nconst songID = [\n    {\n        id: 1,\n        title: 'Go Easy',\n        url:\n            'https://www.laurenswilliam.nl/wp-content/uploads/2016/09/Chill-music-update-1.jpeg',\n    },\n    {\n        id: 2,\n        title: 'Dreams',\n        url:\n            'https://images.pexels.com/photos/96380/pexels-photo-96380.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\n    },\n    {\n        id: 3,\n        title: 'Chill Out',\n        url:\n            'https://www.udiscovermusic.com/wp-content/uploads/2019/04/best-jazz-songs.jpg',\n    },\n    {\n        id: 4,\n        title: 'Twistter',\n        url:\n            'https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1407161403,1267423408&fm=26&gp=0.jpg',\n    },\n    {\n        id: 5,\n        title: 'Free Bird',\n        url:\n            'https://thumbs-prod.si-cdn.com/Vj7Cmc62xkQLwQZLiX1SbOV89ik=/420x240/https://public-media.si-cdn.com/filer/cd/0e/cd0efbec-bc15-4f38-894a-7e0e6f5968b8/campfire_edit.jpg',\n    },\n    {\n        id: 6,\n        title: 'Love',\n        url:\n            'https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1108304347,2567589749&fm=26&gp=0.jpg',\n    },\n\n    {\n        id: 7,\n        title: 'Morning Dew',\n        url:\n            'https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=2255898899,2917333309&fm=26&gp=0.jpg',\n    },\n\n    {\n        id: 8,\n        title: 'The Lounge',\n        url:\n            'https://thumbs-prod.si-cdn.com/Vj7Cmc62xkQLwQZLiX1SbOV89ik=/420x240/https://public-media.si-cdn.com/filer/cd/0e/cd0efbec-bc15-4f38-894a-7e0e6f5968b8/campfire_edit.jpg',\n    },\n];\n\nfunction getTime(time) {\n    if (!isNaN(time)) {\n        return (\n            Math.floor(time / 60) +\n            ':' +\n            ('0' + Math.floor(time % 60)).slice(-2)\n        );\n    }\n}\n\nclass Music extends React.Component {\n    state = {\n        currentSong: null,\n        music: 'stopped',\n        currentTime: null,\n        duration: null,\n    };\n\n    render() {\n        const currentTime = getTime(this.state.currentTime);\n        const duration = getTime(this.state.duration);\n        const playlist = songID.map((item) => {\n            return (\n                <div class=\"ui list\">\n                    <div class=\"item\">\n                        <img\n                            class=\"ui avatar image\"\n                            src={item.url}\n                            alt=\"music images\"\n                        />\n                        <div class=\"content\">\n                            <li\n                                className=\"title\"\n                                key={item.id}\n                                onClick={() =>\n                                    this.setState({ currentSong: item.title })\n                                }\n                            >\n                                {item.title}\n                            </li>\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"MusicDisplay\">\n                <div className=\"ui card main-container\">\n                    <div className=\"info-container\">\n                        {this.state.music === 'playing' ? (\n                            <div className=\"current-song\">\n                                Now Playing {this.state.currentSong}\n                            </div>\n                        ) : (\n                            <div className=\"current-song\">Choose Your Song</div>\n                        )}\n                        {this.state.music === 'paused' ? (\n                            <div className=\"current-song\">\n                                {this.state.currentSong} is paused{' '}\n                            </div>\n                        ) : null}\n                        {this.state.music === 'playing' ||\n                        this.state.music === 'paused' ? (\n                            <div>\n                                {currentTime} / {duration}\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                    </div>\n                    <div className=\"button-container\">\n                        {this.state.music === 'paused' && (\n                            <button\n                                class=\"ui labeled icon secondary basic button\"\n                                onClick={() =>\n                                    this.setState({ music: 'playing' })\n                                }\n                            >\n                                <i class=\" large play circle outline icon\" />\n                                Play\n                            </button>\n                        )}\n                        {this.state.music === 'playing' && (\n                            <button\n                                class=\"ui labeled icon secondary basic button\"\n                                onClick={() =>\n                                    this.setState({ music: 'paused' })\n                                }\n                            >\n                                <i class=\"large pause circle outline icon\" />\n                                Pause\n                            </button>\n                        )}\n                        {this.state.music === 'playing' ||\n                        this.state.music === 'paused' ? (\n                            <button\n                                class=\"ui labeled icon secondary basic button\"\n                                onClick={() => this.setState({ music: 'stop' })}\n                            >\n                                <i class=\"large stop circle outline icon\" />\n                                Stop\n                            </button>\n                        ) : null}\n                    </div>\n\n                    <div className=\"playlist\">{playlist}</div>\n\n                    <audio ref={(ref) => (this.music = ref)} />\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.currentSong !== prevState.currentSong) {\n            let track;\n            switch (this.state.currentSong) {\n                case 'Go Easy':\n                    track = goeasy;\n                    break;\n                case 'Dreams':\n                    track = dreams;\n                    break;\n                case 'Chill Out':\n                    track = chillout;\n                    break;\n                case 'Twistter':\n                    track = twistter;\n                    break;\n                case 'Free Bird':\n                    track = freebird;\n                    break;\n                case 'Love':\n                    track = love;\n                    break;\n                case 'Morning Dew':\n                    track = morningdew;\n                    break;\n                case 'The Lounge':\n                    track = thelounge;\n                    break;\n                default:\n                    break;\n            }\n\n            if (track) {\n                this.music.src = track;\n                this.music.play();\n                this.setState({\n                    music: 'playing',\n                });\n            }\n        }\n\n        if (this.state.music !== prevState.music) {\n            if (this.state.music === 'paused') {\n                this.music.pause();\n            }\n            if (\n                this.state.music === 'playing' &&\n                prevState.music === 'paused'\n            ) {\n                this.music.play();\n            }\n            if (this.state.music === 'stop') {\n                this.music.pause();\n                // this.music.src =\"\";\n                // this.music.load();\n                // this.music = null;\n                // this.music = new Audio();\n                // this.music.preload = 'none';\n                // this.music.pause();\n\n                this.currentTime = 0;\n                this.setState({\n                    currentSong: null,\n                });\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.music.addEventListener('timeupdate', (e) => {\n            this.setState({\n                currentTime: e.target.currentTime,\n                duration: e.target.duration,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.music.removeEventListener('timeupdate', () => {});\n    }\n}\n\nexport default Music;\n","import React, { Component } from 'react';\nimport Board from './Board';\nimport Music from './Music';\nimport './App.css';\n\n/** Simple app that just shows the LightsOut game. */\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"Display\">\n                    <Board />\n                    <Music />\n                </div>\n                <p className=\"Instruction\">\n                    Pressing any of the lights will toggle it and the four\n                    adjacent lights. The goal of the puzzle is to switch all the\n                    lights off, preferably in as few button presses as possible.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') ===\n                    -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}